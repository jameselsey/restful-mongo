apply plugin: "groovy"
apply plugin: "java"
apply plugin: 'war'
apply plugin: 'idea'


version = "1.0-SNAPSHOT"
description = "RestfulMongo"

sourceSets.test.groovy.srcDirs = ["src/test/groovy"]
sourceCompatibility = 1.6

repositories {
    mavenCentral()
    maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
}


ext.jerseyVersion = "1.12"
ext.jacksonVersion = "1.9.8"
ext.springVersion = "3.1.1.RELEASE"

dependencies {
    groovy "org.codehaus.groovy:groovy-all:1.8.6"
    compile "org.springframework:spring-beans:${springVersion}"
    compile "org.springframework:spring-core:${springVersion}"
    compile "org.springframework:spring-context:${springVersion}"
    compile "org.springframework:spring-jdbc:${springVersion}"
    compile "org.springframework:spring-tx:${springVersion}"
    compile "org.springframework:spring-web:${springVersion}"
    compile "org.mongodb:mongo-java-driver:2.8.0"
    compile 'org.springframework.data:spring-data-mongodb:1.0.4.RELEASE'
    compile "org.springframework.ldap:spring-ldap-core:1.3.1.RELEASE"
    compile "commons-lang:commons-lang:2.5"
    compile "com.sun.jersey:jersey-core:${jerseyVersion}"
    compile "com.sun.jersey:jersey-json:${jerseyVersion}"
    compile "com.sun.jersey:jersey-servlet:${jerseyVersion}"
    compile "com.sun.jersey:jersey-server:${jerseyVersion}"
    compile "com.sun.jersey.contribs:jersey-spring:${jerseyVersion}"
    compile "org.codehaus.jackson:jackson-core-asl:${jacksonVersion}"
    compile "org.codehaus.jackson:jackson-mapper-asl:${jacksonVersion}"
    testCompile 'junit:junit-dep:4.8.1'
    testCompile 'org.spockframework:spock-core:0.6-groovy-1.8'
    testRuntime "cglib:cglib-nodep:2.2.2"          // allows mocking of classes (in addition to interfaces)
    testRuntime "org.objenesis:objenesis:1.2"    // allows mocking of classes without default constructor (together with CGLIB)
}

war {
    archiveName = "RestfulMongo.war"
}

test {
    afterTest { desc, result ->
        println "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}
